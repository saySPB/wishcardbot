# ... (–∏–º–ø–æ—Ä—Ç—ã, —Ñ—É–Ω–∫—Ü–∏–∏ add_wish, edit_wish, delete_wish) 
from telebot import types
from utils import bot, get_wish_list, edit_wish, delete_wish, add_wish
def add_wish_start(message, bot):
    user_id = str(message.chat.id)
    bot.send_message(message.chat.id, "–í –∫–∞–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ–±–∞–≤–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ? (–ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–π –µ–µ —á–µ—Ä–µ–∑ –º–µ–Ω—é 'üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏')")
    bot.register_next_step_handler(message, add_wish_category_handler) # –ü–µ—Ä–µ–¥–∞—á–∞ user_data edit_wish_start, delete_wish_start, view_wishes_start, manage_categories_start
def add_wish_category_handler(message):
    user_id = str(message.chat.id)
    category = message.text
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –∂–µ–ª–∞–Ω–∏–µ:")
    bot.register_next_step_handler(message, lambda msg: add_wish_text_handler(msg, user_id, category))

def add_wish_text_handler(message, user_id, category):
    wish_text = message.text
    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏ –¥–µ–¥–ª–∞–π–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):")
    bot.register_next_step_handler(message, lambda msg: add_wish_deadline_handler(msg, user_id, category, wish_text))

def add_wish_deadline_handler(message, user_id, category, wish_text):
    deadline = message.text
    if deadline.lower() == "–Ω–µ—Ç" or deadline == "" or deadline.lower() == "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        deadline = None
    add_wish(user_id, wish_text, category, deadline) # –î–æ–±–∞–≤–ª—è–µ–º deadline
    bot.send_message(message.chat.id, f"–ñ–µ–ª–∞–Ω–∏–µ '{wish_text}' –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '{category}'!")

def edit_wish_start(message, bot, user_data):
    user_id = str(message.chat.id)
    categories = list(user_data[user_id]["categories"].keys())
    if categories:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[types.KeyboardButton(cat) for cat in categories])
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)
        bot.register_next_step_handler(message, lambda msg: edit_wish_category_handler(msg, bot, user_data))
    else:
        bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –°–æ–∑–¥–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é —á–µ—Ä–µ–∑ –º–µ–Ω—é 'üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏'.")

def edit_wish_category_handler(message, bot, user_data):
    user_id = str(message.chat.id)
    category = message.text
    wishes = get_wish_list(user_id, category)
    if wishes:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for i, wish_data in enumerate(wishes):
            markup.add(types.KeyboardButton(f"{i+1}. {wish_data['wish']}"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∂–µ–ª–∞–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", reply_markup=markup)
        bot.register_next_step_handler(message, lambda msg: edit_wish_select_handler(msg, bot, user_data, category))
    else:
        bot.send_message(message.chat.id, "–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç –∂–µ–ª–∞–Ω–∏–π.")

def edit_wish_select_handler(message, bot, user_data, category):
    user_id = str(message.chat.id)
    try:
        wish_index = int(message.text.split(".")[0]) - 1
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∂–µ–ª–∞–Ω–∏—è:")
        bot.register_next_step_handler(message, lambda msg: edit_wish_text_handler(msg, bot, user_data, category, wish_index))
    except (ValueError, IndexError):
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è.")

def edit_wish_text_handler(message, bot, user_data, category, wish_index):
    user_id = str(message.chat.id)
    new_wish_text = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –¥–µ–¥–ª–∞–π–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å' —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ–∂–Ω–∏–π):")
    bot.register_next_step_handler(message, lambda msg: edit_wish_deadline_handler(msg, bot, user_data, category, wish_index, new_wish_text))

def edit_wish_deadline_handler(message, bot, user_data, category, wish_index, new_wish_text):
    user_id = str(message.chat.id)
    new_deadline = message.text
    if new_deadline.lower() == "–Ω–µ—Ç" or new_deadline == "" or new_deadline.lower() == "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        new_deadline = None
    
    if edit_wish(user_id, category, wish_index, new_wish_text, new_deadline): # –ü–µ—Ä–µ–¥–∞—á–∞ user_id
        bot.send_message(message.chat.id, "–ñ–µ–ª–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!")
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ.")

def view_wishes_start(message, bot, user_data):
    user_id = str(message.chat.id)
    chosen_category = message.text
    if chosen_category == "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏":
        wishes = get_wish_list(user_id)
    else:
        wishes = get_wish_list(user_id, chosen_category)

    if wishes:
        response = ""
        for i, wish_data in enumerate(wishes):
            response += f"{i+1}. {wish_data['wish']}"
            if wish_data['deadline']:
                response += f" (–î–µ–¥–ª–∞–π–Ω: {wish_data['deadline']})"
            response += "\n"
        bot.send_message(message.chat.id, response if response else "–ñ–µ–ª–∞–Ω–∏–π –Ω–µ—Ç.")
    else:
        bot.send_message(message.chat.id, "–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç –∂–µ–ª–∞–Ω–∏–π." if chosen_category != "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" else "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∂–µ–ª–∞–Ω–∏–π.")

def delete_wish_start(message, bot, user_data):
    user_id = str(message.chat.id)
    categories = list(user_data[user_id]["categories"].keys())
    if categories:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[types.KeyboardButton(cat) for cat in categories])
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)
        bot.register_next_step_handler(message, lambda msg: delete_wish_category_handler(msg, bot, user_data))
    else:
        bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –°–æ–∑–¥–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é —á–µ—Ä–µ–∑ –º–µ–Ω—é 'üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏'.")

def delete_wish_category_handler(message, bot, user_data):
    user_id = str(message.chat.id)
    category = message.text
    wishes = get_wish_list(user_id, category)
    if wishes:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for i, wish_data in enumerate(wishes):
            markup.add(types.KeyboardButton(f"{i+1}. {wish_data['wish']}"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∂–µ–ª–∞–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", reply_markup=markup)
        bot.register_next_step_handler(message, lambda msg: delete_wish_select_handler(msg, bot, user_data, category))
    else:
        bot.send_message(message.chat.id, "–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç –∂–µ–ª–∞–Ω–∏–π.")


def delete_wish_select_handler(message, bot, user_data, category):
    user_id = str(message.chat.id)
    try:
        wish_index = int(message.text.split(".")[0]) - 1
        if delete_wish(user_id, category, wish_index):
            bot.send_message(message.chat.id, "–ñ–µ–ª–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!")
        else:
            bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∂–µ–ª–∞–Ω–∏–µ.") # –ë–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    except (ValueError, IndexError):
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∂–µ–ª–∞–Ω–∏—è.")